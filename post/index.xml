<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on xxxasdfghjk's blog</title><link>https://xxxasdfghjk.github.io/post/</link><description>Recent content in Posts on xxxasdfghjk's blog</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 13 Oct 2022 23:26:00 +0900</lastBuildDate><atom:link href="https://xxxasdfghjk.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>使っているpecoコマンドまとめ</title><link>https://xxxasdfghjk.github.io/post/202210/peco/</link><pubDate>Thu, 13 Oct 2022 23:26:00 +0900</pubDate><guid>https://xxxasdfghjk.github.io/post/202210/peco/</guid><description>シェル上でリストからのインクリメンタルサーチを可能とするpecoが超便利 lsして、ディレクトリ名を確認して、cd hogehogeなんてのは平成で終わりです。 最強のインクリメンタルサーチツールpecoを使って注意力の消耗とタイポ抽選を回避しましょう。
使ってるものを適当にまとめ。 何か思いついたら追記するかも。
lscd cd $(ls -d */| peco) とりあえず直下のディレクトリを覗きたいときに。
だけど「やっぱcdしたくないのう&amp;hellip;」というときはあるもの。 なんとpecoで何も選ばないと引数なしcdが実行されてホームディレクトリに送りに&amp;hellip;。
関数化して無入力時の処理を書いておくことで回避可能。
function lscd(){ local dir=&amp;#34;$(ls -1d */ | peco)&amp;#34; if [ ! -z &amp;#34;$dir&amp;#34; ] ; then cd &amp;#34;$dir&amp;#34; fi } alias d=lscd git branch git branch -a | grep -v &amp;#34;\-&amp;gt;&amp;#34; | peco | sed -e &amp;#34;s/^\*\s*//g&amp;#34; 山あるブランチからすぐに選べる。pecoの醍醐味。
git branch -Dやgit checkoutと組み合わせて使う。
git checkout -b $(git branch -a | grep -v &amp;#34;\-&amp;gt;&amp;#34; | peco | sed -e &amp;#34;s/^\*\s*//g&amp;#34;) 実際にはgitやcheckout、この長い後ろの部分はaliasにしといて、g o Bで起動するようにしている。キーに割り当ててもいいかもしれない。</description></item><item><title>Init Post</title><link>https://xxxasdfghjk.github.io/post/202210/init-post/</link><pubDate>Thu, 13 Oct 2022 22:26:00 +0900</pubDate><guid>https://xxxasdfghjk.github.io/post/202210/init-post/</guid><description>はじめての投稿！</description></item></channel></rss>